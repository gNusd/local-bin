#!/usr/bin/env python

 #####  #    # #    #  ####  License: GNU GPLv3
 #    # ##   # #    # #      Year: 2020
 #      # #  # #    #  ####
 #  ### #  # # #    #      # https://github.com/gnusd
 #    # #   ## #    # #    # http://gnusd.xyz
 #####  #    #  ####   ####

# FILENAME: au

import os
import shutil
import subprocess
from mutagen.flac import FLAC
from mutagen.easyid3 import EasyID3
from mutagen.oggvorbis import OggVorbis


def convert(media_dir, files, destination):

    for File in files:
        filename, file_ext = os.path.splitext(File)


        if file_ext == ".flac" || file_ext == ".ape":
            audio = FLAC(media_dir + "/" + File)
            try:
                artist_album_folder = str(audio["artist"][0]) + "/" + str(audio["album"][0] + "/")
                new_folder = os.path.join(destination, artist_album_folder)
                dest_file = new_folder + newfilename

                if os.path.isfile(dest_file):
                    pass
                else:
                    subprocess.call(["ffmpeg","-i",File,"-qscale:a", "0",newfilename], cwd=media_dir)
                    os.chdir(media_dir)
                    os.remove(File)
                    file_move = os.path.join(media_dir, newfilename)
                    if os.path.isdir(new_folder):
                        pass
                    else:
                        os.makedirs(new_folder)

                        try:
                            shutil.move(file_move, new_folder)
                            rmdir = "{}*".format(media_dir)
                            shutil.rmtree(rmdir, ignore_errors=True)

                        except Exception as e:
                            print(e)

            except KeyError as e:
                pass

        elif file_ext == ".mp3":

            audio = EasyID3(media_dir + "/" + File)
            try:
                artist_album_folder = str(audio["artist"][0]) + "/" + str(audio["album"][0] + "/")

                new_folder = os.path.join(destination, artist_album_folder)
                file_move = os.path.join(media_dir, File)
                if os.path.isdir(new_folder):
                    pass
                else:
                    os.makedirs(new_folder)
                    dest_file = new_folder + File

                    if os.path.isfile(dest_file):
                        pass
                    else:
                        try:
                            shutil.move(file_move, new_folder)

                        except Exception as e:
                            print(e)

            except KeyError as e:
                pass


        elif file_ext == ".ogg":

            audio = OggVorbis(media_dir + "/" + File)
            try:
                artist_album_folder = str(audio["artist"][0]) + "/" + str(audio["album"][0] + "/")

                new_folder = os.path.join(destination, artist_album_folder)
                file_move = os.path.join(media_dir, File)
                if os.path.isdir(new_folder):
                    pass
                else:
                    os.makedirs(new_folder)
                    dest_file = new_folder + File

                    if os.path.isfile(dest_file):
                        pass
                    else:
                        try:
                            shutil.move(file_move, new_folder)

                        except Exception as e:
                            print(e)

            except KeyError as e:
                pass

def walk(baseDir, destination):
    for subdir, dirs, files in os.walk(baseDir):
        if files:
            convert(subdir, files, destination)
    return baseDir

if __name__ == "__main__":
    pass
