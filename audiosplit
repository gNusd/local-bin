#!/usr/bin/env bash

  ####   #    # #    #  ####  License: GNU GPLv3
  #    # ##   # #    # #      Year: 2020
  #      # #  # #    #  ####
  #  ### #  # # #    #      # https://github.com/gnusd
  #    # #   ## #    # #    # http://gnusd.xyz
  ####   #    #  ####   ####

# FILENAME: audiosplit

split () {
		cuebreakpoints "$CUE_FILE" | shnsplit -o flac "$AUDIO_FILE"
		cuetag "$CUE_FILE" split-track*.flac
}

check_cue () {
		name_cue_file="$(ls | grep \.cue$)"
		num_cue_file="$(echo $name_cue_file | wc -l)"
		if [ "$num_cue_file" -gt 1 ]
		then
				declare -a num_cue_array
				declare -a name_cue_array
				for file in *.cue
				do
						num_tracks="$(cat "$file" | grep -c TRACK)"
						num_cue_array+=("$num_tracks")

						file_name="${file%%.*}"
						clean_file="$(echo $file_name | sed 's/[^0-9a-zA-Z]//g').cue"
						mv "$file" "$clean_file"
						name_cue_array+=("$clean_file")
				done
				comp="$(echo ${cue_array[@]} | tr ' ' '\n' | sort | uniq -u)"
				if [ -z "$comp" ]


				fi
		fi

		file_name="${name_cue_file%%.*}"
		cue_name="$(echo $file_name | sed 's/[^0-9a-zA-Z]//g').cue"
		if [ "$name_cue_file" != "$cue_name" ]
		then
				mv "$name_cue_file" "$cue_name"
				name_cue_file="$cue_name"
		fi
		num_tracks="$(cat "$name_cue_file" | grep -c TRACK)"
		if [ "$num_tracks" -lt 1 ]
		then
				echo "Probably not a cue file"
		elif [ "num_tracks" == 1 ]
		then
				echo "Check cue sheet, possible only one track."
		else
				CUE_FILE="$name_cue_file"
				export CUE_FILE
		fi
}

check_audio () {

		num_audio_files="$(ls | grep flac$)"
		if [ "$num_audio_files" -gt 1 ]
		then
				echo "More than one audio file in directory."
				unset_local_varibles
		else
				file_name="${AUDIO_FILE%%.*}"
				audio_name="$(echo $file_name | sed 's/[^0-9a-zA-Z]//g').flac"
				if [ "$AUDIO_FILE" != "$audio_name" ]
				then
						mv "$AUDIO_FILE" "$audio_name"
						AUDIO_FILE="$audio_name"
						export AUDIO_FILE
				fi
				bitrate=$(mediainfo "$AUDIO_FILE" | grep "depth" | sed 's/[^0-9]*//g')

				if [ "$bitrate" -gt 16 ]
				then
						tmp_file="${AUDIO_FILE%%.*}tmp.flac"
						cp "$AUDIO_FILE" "$tmp_file" && rm "$AUDIO_FILE"
						ffmpeg -i "$tmp_file" -af aformat=s16:44100 "$AUDIO_FILE" && rm "$tmp_file"
				fi
		fi
}

check () {
		check_cue
		check_audio
}

delete () {
		printf '%s' "Delete flac & cue file [y/N] "
		read -r response

		if [ "$response" != "${response#[Yy]}" ]
		then
				rm "$AUDIO_FILE" "$CUE_FILE"
		else
				mv "$AUDIO_FILE" "$AUDIO_FILE".bak
		fi
}

beets () {
		printf '%s' "Import to beets  [y/N] "
		read -r response

		if [ "$response" != "${response#[Yy]}" ]
		then
				beet import .
		fi
}

unset_local_varibles () {
		unset CUE_FILE
		unset AUDIO_FILE
}

toflac () {
		file="$(echo $AUDIO_FILE | sed 's/[^0-9a-zA-Z]//g').flac"
		filename="${file%%.*}.flac"
		ffmpeg -i "$AUDIO_FILE" -c:a flac $filename && rm "$AUDIO_FILE"
}

for file in *
do
		ext="${file##*.}"
		case "$ext" in
				flac)
						export AUDIO_FILE="$file"
						check
						split
						delete
						beets
						;;
				ape | wv | m4a)
						export AUDIO_FILE="$file"
						toflac
						export AUDIO_FILE="$filename"
						check
						split
						delete
						beets
						;;
				*)
		esac
done

unset_local_varibles
